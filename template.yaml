AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  healthcare-ms

  Basic backend service as healthcare-ms

Globals:
  Function:
    Timeout: 20
    Runtime: nodejs20.x
    Architectures:
      - x86_64

Resources:
  HealthcareLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole

  HealthcareApiGw:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowOrigin: "'*'"
        AllowMethods: "'OPTIONS,POST,GET,PATCH,PUT,DELETE'"
        AllowHeaders: "'Content-Type, Access-Control-Allow-Origin, Authorization'"

  HealthcareUserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: healhcare-user
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  HealthcareDailyTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: healhcare-daily-stats
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
        - AttributeName: date
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      GlobalSecondaryIndexes:
        - IndexName: byUserid
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: date
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1

  HealthcareJournalTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: healhcare-journal
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
        - AttributeName: createdAt
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      GlobalSecondaryIndexes:
        - IndexName: byUserid
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: createdAt
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1

  HealthcareUserMgmtFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: dist/app.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref HealthcareUserTable
      Events:
        PostUser:
          Type: Api
          Properties:
            RestApiId: !Ref HealthcareApiGw
            Path: /users
            Method: post
        GetUser:
          Type: Api
          Properties:
            RestApiId: !Ref HealthcareApiGw
            Path: /users/{id}
            Method: get
        UpdateUser:
          Type: Api
          Properties:
            RestApiId: !Ref HealthcareApiGw
            Path: /users/{id}
            Method: put
        DeleteUser:
          Type: Api
          Properties:
            RestApiId: !Ref HealthcareApiGw
            Path: /users/{id}
            Method: delete
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/app.ts

  HealthcareJournalMgmtFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: dist/app.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref HealthcareJournalTable
        - Statement:
          - Effect: Allow
            Resource: '*'
            Action:
              - events:PutEvents      

      Events:
        PostJournal:
          Type: Api
          Properties:
            RestApiId: !Ref HealthcareApiGw
            Path: /journals
            Method: post
        GetJournal:
          Type: Api
          Properties:
            RestApiId: !Ref HealthcareApiGw
            Path: /journals
            Method: get
        UpdateJournal:
          Type: Api
          Properties:
            RestApiId: !Ref HealthcareApiGw
            Path: /journals/{id}
            Method: put
        DeleteJournal:
          Type: Api
          Properties:
            RestApiId: !Ref HealthcareApiGw
            Path: /journals/{id}
            Method: delete
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/app.ts

  HealthcareStatsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: dist/app.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref HealthcareJournalTable
        - DynamoDBCrudPolicy:
            TableName: !Ref HealthcareDailyTable
        - DynamoDBCrudPolicy:
            TableName: !Ref HealthcareJournalTable
      Events:
        PostDaily:
          Type: Api
          Properties:
            RestApiId: !Ref HealthcareApiGw
            Path: /daily
            Method: post
        GetDaily:
          Type: Api
          Properties:
            RestApiId: !Ref HealthcareApiGw
            Path: /daily
            Method: get
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/app.ts

  HealthcareAppFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: dist/app.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref HealthcareJournalTable
        - DynamoDBCrudPolicy:
            TableName: !Ref HealthcareDailyTable
        - DynamoDBCrudPolicy:
            TableName: !Ref HealthcareJournalTable
      Events:
        RunApp:
          Type: Api
          Properties:
            RestApiId: !Ref HealthcareApiGw
            Path: /app/run
            Method: post
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/app.ts

Outputs:
  HealthcareApiGw:
    Description: 'API Gateway endpoint URL'
    Value: !Sub 'https://${HealthcareApiGw}.execute-api.${AWS::Region}.amazonaws.com/Prod/'
